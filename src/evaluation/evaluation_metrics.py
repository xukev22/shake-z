import nltk
from nltk.translate.bleu_score import corpus_bleu

# Uncomment the following line if you haven't already downloaded the required tokenizer data
# nltk.download('punkt') # TODO


def compute_bleu(model, dataset):
    """
    Compute the corpus BLEU score for a given model on a dataset.

    Args:
        model: A model with a translate() method that takes a source sentence as input and returns a generated translation.
        dataset: A list of tuples in the form (source_sentence, reference_translation).

    Returns:
        bleu_score: A float representing the corpus BLEU score.
    """
    references = (
        []
    )  # List of lists: each reference is a list of tokenized reference sentences.
    hypotheses = []  # List of tokenized hypothesis sentences generated by the model.

    for source, reference in dataset:
        # Generate model output
        hypothesis = model.translate(source)

        # Tokenize both the model's output and the reference translation
        hyp_tokens = nltk.word_tokenize(hypothesis.lower())
        ref_tokens = nltk.word_tokenize(reference.lower())

        hypotheses.append(hyp_tokens)
        references.append(
            [ref_tokens]
        )  # Note: corpus_bleu expects a list of references per hypothesis.

    bleu_score = corpus_bleu(references, hypotheses)
    return bleu_score


# Optional: Placeholder for additional metric functions
def compute_rouge(model, dataset):
    """
    Placeholder function for computing ROUGE scores.
    You can use packages like `rouge-score` from Google Research.
    """
    # Implementation would go here...
    pass


if __name__ == "__main__":
    # Sample usage with a dummy model and dataset for testing purposes
    class DummyModel:
        def translate(self, text):
            # Dummy translation: return the input text unchanged
            return text

    # Create a dummy model instance
    dummy_model = DummyModel()

    # Dummy dataset: list of (source, reference) sentence pairs
    dummy_dataset = [
        ("This is a test.", "This is a test."),
        ("Another example sentence.", "Another example sentence."),
    ]

    # Compute and print BLEU score
    score = compute_bleu(dummy_model, dummy_dataset)
    print("BLEU Score:", score)
